эname: Bild Deploy Pipeline


on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  SERVER_IP: 5.129.250.92
  DEPLOY_USER: root
  key: ${{ secrets.SSH_PRIVATE_KEY }}
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE_NAME: ${{ github.repository }}

jobs:
  
  build:
    name: Build Application
    #needs: sast
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker
        run: |
          docker --version
          docker info
      
      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.DOCKER_REGISTRY }} -u ${{ github.actor }} --password-stdin
      
      - name: Use nginx image as base (simple alternative)
        run: |
          docker pull nginx:alpine
        
          docker tag nginx:alpine ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          docker tag nginx:alpine ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          echo "✓ Nginx image successfully pushed to GHCR"
      
      - name: Verify image
        run: |
          docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          echo "✓ Image verification successful"

  deploy:
    name: Deploy to Server
    needs: build
    runs-on: self-hosted
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
    steps:
      - name: Copy docker-compose to server
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml ${{ env.DEPLOY_USER }}@${{ env.SERVER_IP }}:/root/
      
      - name: Deploy with docker-compose
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.DEPLOY_USER }}@${{ env.SERVER_IP }} << 'EOF'
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.DOCKER_REGISTRY }} -u ${{ github.actor }} --password-stdin
          docker-compose pull
          docker-compose up -d
          docker image prune -f
          echo "✓ Deployment completed successfully"
          EOF
